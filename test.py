# Python을 사용하여 다음 지침에 따라 모듈을 가져오지 않고 클래스를 구성합니다.
# - 데이터와 모양의 2가지 입력이 주어지면 중첩 목록을 사용하여 텐서를 구성합니다.
# - 텐서는 n차원 행렬 (순서는 스칼라, 벡터, 행렬, 텐서로 이동)
# - data[] : 모든 숫자(int 또는 float)
# - shape[]: 양의 정수 -> shape[] = empty list면 [] 출력
# -구성된 텐서는 인스턴스 변수로 저장하거나 표준 출력으로 인쇄하거나 둘 다 할 수 있습니다.
# - 데이터 넘치면 자르기, 남으면 0으로 채우기

class Tensor():
    def __init__ (self, data, shape):
        self.data = data
        self.shape = shape
        self.tensor = 

    def shape_data(self, ): 



>>> data0 = [0, 1, 2, 3, 4, 5, 0.1, 0.2, -3]
>>> shape0 = [2, 3, 2]
>>> tensor0 = Tensor(data0, shape0)

output:
[[[0, 1], [2, 3], [4, 5]], [[0.1, 0.2], [-3, 0], [0, 0]]] --> 12개 -> 2등분 -> 3등분 -> 2개씩


>>> data1 = [0, 1, 2, 3, 4, 5, 0.1, 0.2, -3, -2, -1, 3, 2, 1]
>>> shape1 = [5, 2]
>>> tensor1 = Tensor(data1, shape1)

output:
[[0, 1], [2, 3], [4, 5], [0.1, 0.2], [-3, -2]] --> 10개만 -> 5등분 -> 2개씩


>>> data3 = [0, 1, 2, 3, 4, 5, 0.1, 0.2, -3, -2, -1, 3, 2, 1] -> 14개
>>> shape3 = [5,4,3,2]
>>> tensor3 = Tensor(data3, shape3) -> 120개 가능

output:
[[[[][][]][[][][]][[][][]][[][][]]],[[][][][]],[[][][][]],[[][][][]],[[][][][]]]